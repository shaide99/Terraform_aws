provider "aws" {
  region = "us-east-2"
}
resource "aws_instance" "amazon_linx" {
  count                  = 1
  ami                    = "ami-09da212cf18033880"
  instance_type          = "t2.micro"
  vpc_security_group_ids = [aws_security_group.allow_http_and_ssh.id]
  key_name               = "Mykey"
  tags = {
    name = "aws_instance"
  }
  user_data = <<-EOF
    #!/bin/bash
    sudo yum update -y
    sudo yum install vim -y
    sudo yum install httpd -y
    sudo systemctl start httpd
    sudo systemctl enable httpd
    sudo yum install firewalld -y
    sudo systemctl start firewalld
    sudo systemctl enable firewalld
    sudo firewall-cmd --permanent --add-service=http
    sudo firewall-cmd --reload
    sudo echo "This is load balancer 1" > /var/www/html/index.html
  EOF
}
resource "aws_instance" "ubuntu_linux" {
  count                  = 1
  ami                    = "ami-085f9c64a9b75eed5"
  instance_type          = "t2.micro"
  vpc_security_group_ids = [aws_security_group.allow_http_and_ssh.id]
  key_name               = "Mykey"
  tags = {
    Name = "ubuntu_linux"
  }
  user_data = <<-EOF
    #!/bin/bash 
    sudo yum update -y
    sudo yum install vim -y
    sudo yum install httpd -y
    sudo systemctl start httpd
    sudo systemctl enable httpd
    sudo yum install firewalld -y
    sudo systemctl start firewalld
    sudo systemctl enable firewalld
    sudo firewall-cmd --permanent --add-service=http
    sudo firewall-cmd --reload
    sudo echo "This is load balancer 2" > /var/www/html/index.html
  EOF
}
resource "aws_security_group" "allow_http_and_ssh" {
  name = "allow HTTP and SSH1"
  ingress {
    description = "allow HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "allow SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "all traffic"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
resource "aws_s3_bucket" "shaide-bucket" {
  bucket = "shaide-bucket"
  tags = {
    Name        = "shaide-bucket"
    Enviornment = "DevOps"
  }
}
resource "aws_s3_bucket" "pollys-bucket" {
  bucket = "pollys-bucket"
  tags = {
    name        = "polly-bucket"
    Enviornment = "Devops"
  }
}
